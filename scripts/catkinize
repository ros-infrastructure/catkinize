#!/usr/bin/env python

#
# Copyright (c) 2012, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Willow Garage, Inc. nor the names of its
#       contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

from optparse import OptionParser

from catkinize.main import catkinize_stack, catkinize_package, prompt_changes,\
    perform_changes
from catkinize.utils import is_valid_version
import os

def main():
    usage = 'usage: %prog path version'
    description = '''\
catkinize backups your rosbuild build files with ".backup" extension and \
creates new build files for catkin. New files are heuristically build from \
old files and will most probably need additional manual changes before \
working with catkin.'''
    parser = OptionParser(usage=usage, description=description)
    options, args = parser.parse_args()

    if len(args) != 2:
        parser.error("You must specify 'path' and 'version' of the package.")

    path = args[0]
    version = args[1]

    if not is_valid_version(version):
        parser.error("The version must have the format: \d.\d.\d")

    if os.path.isfile(os.path.join(path, 'stack.xml')):
        changeset = catkinize_stack(path, version)
    elif os.path.isfile(os.path.join(path, 'manifest.xml')):
        changeset = catkinize_package(path, version)
    else:
        raise ValueError(
            'Path is not a rosbuild stack or package, missing stack.xml or ' + \
            'manifest.xml at %s' % path)

    if prompt_changes(changeset):
        perform_changes(changeset)

if __name__ == '__main__':
    main()
